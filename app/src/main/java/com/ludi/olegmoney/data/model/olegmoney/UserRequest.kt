// Code generated by Wire protocol buffer compiler, do not edit.
// Source: olegmoney.UserRequest in user.proto
package olegmoney

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import okio.ByteString

public class UserRequest(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 0,
  )
  @JvmField
  public val name: String = "",
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 1,
  )
  @JvmField
  public val email: String = "",
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 2,
  )
  @JvmField
  public val password: String = "",
  unknownFields: ByteString = ByteString.EMPTY,
) : AndroidMessage<UserRequest, UserRequest.Builder>(ADAPTER, unknownFields) {
  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.name = name
    builder.email = email
    builder.password = password
    builder.addUnknownFields(unknownFields)
    return builder
  }

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is UserRequest) return false
    if (unknownFields != other.unknownFields) return false
    if (name != other.name) return false
    if (email != other.email) return false
    if (password != other.password) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + name.hashCode()
      result = result * 37 + email.hashCode()
      result = result * 37 + password.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """name=${sanitize(name)}"""
    result += """email=${sanitize(email)}"""
    result += """password=${sanitize(password)}"""
    return result.joinToString(prefix = "UserRequest{", separator = ", ", postfix = "}")
  }

  public fun copy(
    name: String = this.name,
    email: String = this.email,
    password: String = this.password,
    unknownFields: ByteString = this.unknownFields,
  ): UserRequest = UserRequest(name, email, password, unknownFields)

  public class Builder : Message.Builder<UserRequest, Builder>() {
    @JvmField
    public var name: String = ""

    @JvmField
    public var email: String = ""

    @JvmField
    public var password: String = ""

    public fun name(name: String): Builder {
      this.name = name
      return this
    }

    public fun email(email: String): Builder {
      this.email = email
      return this
    }

    public fun password(password: String): Builder {
      this.password = password
      return this
    }

    override fun build(): UserRequest = UserRequest(
      name = name,
      email = email,
      password = password,
      unknownFields = buildUnknownFields()
    )
  }

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<UserRequest> = object : ProtoAdapter<UserRequest>(
      FieldEncoding.LENGTH_DELIMITED, 
      UserRequest::class, 
      "type.googleapis.com/olegmoney.UserRequest", 
      PROTO_3, 
      null, 
      "user.proto"
    ) {
      override fun encodedSize(`value`: UserRequest): Int {
        var size = value.unknownFields.size
        if (value.name != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1, value.name)
        if (value.email != "") size += ProtoAdapter.STRING.encodedSizeWithTag(2, value.email)
        if (value.password != "") size += ProtoAdapter.STRING.encodedSizeWithTag(3, value.password)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: UserRequest) {
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name)
        if (value.email != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.email)
        if (value.password != "") ProtoAdapter.STRING.encodeWithTag(writer, 3, value.password)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: UserRequest) {
        writer.writeBytes(value.unknownFields)
        if (value.password != "") ProtoAdapter.STRING.encodeWithTag(writer, 3, value.password)
        if (value.email != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.email)
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name)
      }

      override fun decode(reader: ProtoReader): UserRequest {
        var name: String = ""
        var email: String = ""
        var password: String = ""
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> name = ProtoAdapter.STRING.decode(reader)
            2 -> email = ProtoAdapter.STRING.decode(reader)
            3 -> password = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return UserRequest(
          name = name,
          email = email,
          password = password,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: UserRequest): UserRequest = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    public val CREATOR: Parcelable.Creator<UserRequest> = AndroidMessage.newCreator(ADAPTER)

    private const val serialVersionUID: Long = 0L
  }
}
