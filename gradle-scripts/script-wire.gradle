def protoPath = 'src/main/proto'
def wireGeneratedPath = '/src/main/kotlin'
def modulePath = projectDir.absolutePath + "/src/main/java/com/ludi/olegmoney/data/model"
//def modulePath = 'src/main/data/model'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("com.squareup.wire:wire-compiler:"+Versions.wire)
    }
}

// This handles the Protobuf model generation with Wire
task generateWireClasses {
    description = 'Generate Java classes from Protobuf (.proto) schema files for use with Square\'s Wire library'
    fileTree(dir: protoPath, include: '**/*.proto').each { File file ->
        doLast {
            // The start index of 'protoPath' in the file path
            def indexProtoPath = file.path.indexOf(protoPath)
            // The start index for the file's path from the root (i.e. 'sharedproto'). Add '1' for
            // the forward slash that comes after 'protoPath'
            def indexRelativePath = indexProtoPath + protoPath.length() + 1
            def relativePath = file.path.substring(indexRelativePath)
            javaexec {
                main = 'com.squareup.wire.WireCompiler'
                classpath = buildscript.configurations.classpath
                args = ["--proto_path=${protoPath}", "--kotlin_out=${modulePath}", "--android", "--java_interop", "${relativePath}"]
            }
        }
    }
}